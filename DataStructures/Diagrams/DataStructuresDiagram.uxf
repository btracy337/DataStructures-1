<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1500</x>
      <y>40</y>
      <w>460</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
bg=red

--
- data : Type


--
+Node&lt;Type&gt;(): constructor
+ Node&lt;Type&gt; (Type) : constructor


+ getData() : Type
+ setData() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1510</x>
      <y>370</y>
      <w>440</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>LinearNode&lt;Type&gt;
bg=blue
--
- next : Node&lt;Type&gt; *
--
LinearNode&lt;Type&gt;(): constructor
LinearNode&lt;Type&gt;(Type) : constructor
LinearNode&lt;Type&gt;(Type, LinearNode&lt;Type&gt;) : constructor


+ getNext() : Node&lt;Type&gt; *
+ setNext(Node&lt;Type&gt;*) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2070</x>
      <y>360</y>
      <w>360</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>Array&lt;Type&gt;

--
-size:int
-front: LinearNode&lt;Type&gt; *

--

+Array&lt;Type&gt;(int):constructor
+getSize() : int
+setAtIndex(int, Type) : void
+getFromIndex(int):Type
+ operator []
+ operator = Array&lt;Type&gt;&amp;
+ ~Array() : destructor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1940</x>
      <y>470</y>
      <w>150</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1580</x>
      <y>730</y>
      <w>360</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>List&lt;Type&gt;

--
*List Structure methods*
getFromIndex(int) : Type
add(Type) : void
addAtIndex(int, Type) : void
remove(int) : Type

*List Accessors*
getSize() : int
getFront() : LinearNode&lt;Type&gt; *
getEnd() : LinearNode&lt;Type&gt; *

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1710</x>
      <y>600</y>
      <w>30</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1700</x>
      <y>290</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1610</x>
      <y>1150</y>
      <w>110</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1800</x>
      <y>1240</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Queue&lt;Type&gt;
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1610</x>
      <y>1040</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>LinkedList&lt;Type&gt;
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1520</x>
      <y>1240</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Stack&lt;Type&gt;
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1730</x>
      <y>990</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1800</x>
      <y>1150</y>
      <w>90</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2250</x>
      <y>90</y>
      <w>310</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>DoubleNode&lt;Type&gt;
--
- nextNode : DN *
- prevNode : DN *
--
+ DN()
+ DN(Type)
+ DN(Type, DN *, DN *)
+get/set
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1950</x>
      <y>140</y>
      <w>320</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;300.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>30</y>
      <w>460</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>BinaryTreeNode&lt;Type&gt;
bg=green
--

- rightChild : BinaryTreeNode&lt;Type&gt; *
- leftChild : BinaryTreeNode&lt;Type&gt; *
- root : BinaryTreeNode&lt;Type&gt; *

--

+ BinaryTreeNode&lt;Type&gt;(): constructor 
+ BinaryTreeNode&lt;Type&gt;(Type): constructor 

+ getters/setters</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1210</x>
      <y>120</y>
      <w>310</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>290.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>810</x>
      <y>380</y>
      <w>320</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>Tree&lt;Type&gt; 
bg=green
--

#root : BinaryTreeNode&lt;Type&gt; 

--
*Informational methods*
+getSize() : int
+getHeight() : int
+isComplete() : bool
+isBalanced() : bool

--
*Data Methods*
+ insert(Type) : void 
+ contains(Type) : bool
+ remove(Type) : void

--
*Traversals*
+ inOrderTraversal() : void 
+ preOrderTraversal() : void 
+ postOrderTraversal() : void 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>950</x>
      <y>250</y>
      <w>30</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
</diagram>
